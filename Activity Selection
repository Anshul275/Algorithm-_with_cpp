
  // Greedy Algorithm - Activity Selection problem
   // select maximum activity
#include<iostream>
#include<bits/stdc++.h>
//#include<algorithm>
using namespace std;

struct Activity
{
    int start,finish;
};
bool Activity_compare(Activity s1,Activity s2)
{
    return(s1.finish<s2.finish);  //sort increasing order of finishing time
}
void PrintMaxActivity(Activity arr[],int n)
{
  sort(arr,arr+n,Activity_compare);   //sort increasing order of finishing time

  int i=0;   // first activity always get selected
  cout<<"("<<arr[i].start<<","<<arr[i].finish<<") ";

  for(int j=1;j<n;j++)
  {
    if(arr[j].start>=arr[i].finish) // if start time is greater than equal to the finish time of previous activity then select it
     {
        cout<<"("<<arr[j].start<<","<<arr[j].finish<<") ";
        i=j;
     }
  }
  cout<<endl;
}
int main()
{
  Activity arr[]={{5,9},{1,2},{3,4},{0,6},{5,7},{8,9}};
  int n=sizeof(arr)/sizeof(arr[0]);
  cout<<"Following Activities are Selected : ";
  PrintMaxActivity(arr,n);
  return 0;
}
